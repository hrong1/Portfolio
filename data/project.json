[
  {
    "title": "War of the Wilds",
    "imageUrl": "img/War_of_the_Wilds.png",
    "description": "A simplistic third-person dungeon crawler with RPG turn-based combat. Players control a small group of animals to explore the dungeon, defeat different enemies, obtain different rewards through treasure chests, and finally reach the end.",
    "link": "https://store.steampowered.com/app/3689620/War_of_the_Wilds/",
    "repositoryLink": "Not available (private project)",
    "tool": ["Unity", "C#"],
    "projectType": "School team project",
    "role": "Programmer",
    "contribute": [
      "Implemented a multi-slot save/load system to persist player progress",
      "Developed enemy AI with a line-of-sight chase behavior (using Physics.Linecast), preventing enemies from moving through obstacles",
      "Created the basic game menu UI and implemented smooth sliding animations for the menu to enhance user experience"
    ]
  },
  {
    "title": "Phaser Valley",
    "imageUrl": "img/phaser_valley.png",
    "description": "A 2D Phaser game where players can plant different plants. Plants grow based on sun and water levels. When the plants mature, players can reap them to earn money. Players need to earn enough money to reach the game win condition.",
    "link": "https://hrong1.github.io/CMPM-121-Phaser-Valley/",
    "repositoryLink": "https://github.com/14N-W4774c3/CMPM-121-Phaser-Valley",
    "tool": ["JavaScript", "Phaser 3"],
    "projectType": "School team project",
    "role": "Design Lead",
    "contribute": [
      "Engineered a localization manager to support multiple languages (English, Arabic, Chinese), enhancing accessibility in the game",
      "Designed and implemented an external Domain-Specific Language (DSL) that empowered designers to create and modify in-game scenarios without altering core code",
      "Developed core gameplay loop, featuring a 5x5 grid-based farming system with mechanics for sowing, reaping, and resource management (sun/water levels), and having different plant types with multiple growth stages"
    ]
  },
  {
    "title": "Sticky Pad",
    "imageUrl": "img/sticky_pad.png",
    "description": "A canvas page that allow user draw on. User can change the linewidth and the color of the line. Canvas is also allow user add emoji in the canvas, user can use the emoji that in the web or add new emoji in. Redo, undo, and clear are available for canvas. And it also allow user export the canvas.",
    "link": "https://hrong1.github.io/cmpm-121-demo-2/",
    "repositoryLink": "https://github.com/hrong1/cmpm-121-demo-2",
    "tool": ["TypeScript"],
    "projectType": "School Solo Project",
    "role": "Developer",
    "contribute": [
      "Two array stack structures are used to maintain an operation history, supporting undo and redo functionality.",
      "Line thickness and color can be flexibly adjusted, with sliders and buttons for interaction.",
      "Custom stickers are supported, with sticker buttons dynamically generated, allowing users to select and place stickers on the canvas."
    ]
  },
  {
    "title": "Earn Money",
    "imageUrl": "img/earn_money.png",
    "description": "An idle game similar to cookie clicker. Players can press the button in the center to get money, or use the money to buy different things to make the money grow automatically.",
    "link": "https://hrong1.github.io/cmpm-121-demo-1/",
    "repositoryLink": "https://github.com/hrong1/cmpm-121-demo-1",
    "tool": ["TypeScript"],
    "projectType": "School Solo Project",
    "role": "Developer",
    "contribute": [
      "Implemented button state management, detecting the player's gold balance and disabling buttons for items currently unavailable for purchase.",
      "Automatic income growth based on time is implemented through requestAnimationFrame, automatically increasing the gold level per second based on the player's purchases.",
      "A button with a ðŸ’° color. Each time it is clicked, a money emoji (ðŸ’µ) falls from the button position and rotates randomly, adding visual interest to the game."
    ]
  }
]